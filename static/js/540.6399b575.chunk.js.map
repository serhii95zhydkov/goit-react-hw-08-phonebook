{"version":3,"file":"static/js/540.6399b575.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/TextField/TextField.styled.jsx","components/TextField/TextField.jsx","hooks/useForm.js","components/LoginForm/fields.js","components/LoginForm/initialState.js","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  background-color: #fff;\n  border: 1px solid;\n  border-radius: 5px;\n  padding: 10px 15px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #000;\n    color: #fff;\n  }\n`;\n\nexport { StyledButton };\n","import { StyledButton } from './Button.styled';\n\nconst Button = ({ children, type = 'submit' }) => {\n  return <StyledButton type={type}>{children}</StyledButton>;\n};\n\nexport default Button;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import styled from 'styled-components';\n\nconst StyledTextFieldWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 120px 1fr;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 15px;\n`;\n\nconst StyledTextFieldInput = styled.input`\n  padding: 10px;\n  border: 1px solid;\n  border-radius: 5px;\n`;\n\nexport { StyledTextFieldWrapper, StyledTextFieldInput };\n","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  StyledTextFieldWrapper,\n  StyledTextFieldInput,\n} from './TextField.styled';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <StyledTextFieldWrapper>\n      <label htmlFor={id}>{label}</label>\n      <StyledTextFieldInput id={id} onChange={handleChange} {...props} />\n    </StyledTextFieldWrapper>\n  );\n};\n\nexport default TextField;\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'User email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","import styled from 'styled-components';\n\nconst StyledLoginForm = styled.form`\n  width: 400px;\n  padding: 20px;\n`;\n\nexport { StyledLoginForm };","import TextField from 'components/TextField/TextField';\nimport Button from 'components/Button/Button';\n\nimport useForm from 'hooks/useForm';\n\nimport fields from './fields';\nimport initialState from './initialState';\n\nimport { StyledLoginForm } from './LoginForm.styled';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { email, password } = state;\n\n  return (\n    <StyledLoginForm onSubmit={handleSubmit}>\n      <TextField value={email} handleChange={handleChange} {...fields.email} />\n      <TextField\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <Button>Login</Button>\n    </StyledLoginForm>\n  );\n};\n\nexport default LoginForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { login } from 'redux/auth/auth-operations';\nimport { isUserLogin } from 'redux/auth/auth-selectors';\n\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const dispatch = useDispatch();\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <div>\n      <h1>Login page</h1>\n      <LoginForm onSubmit={handleLogin} />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["StyledButton","styled","children","type","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","StyledTextFieldWrapper","StyledTextFieldInput","label","handleChange","props","id","useMemo","nanoid","htmlFor","onChange","initialState","onSubmit","useState","state","setState","useCallback","name","value","prevState","handleSubmit","e","preventDefault","email","required","placeholder","password","StyledLoginForm","useForm","TextField","fields","Button","isLogin","useSelector","isUserLogin","dispatch","useDispatch","to","data","login","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}