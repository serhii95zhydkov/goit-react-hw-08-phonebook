{"version":3,"file":"static/js/76.c9bc277e.chunk.js","mappings":"+OAEMA,EAAyBC,EAAAA,GAAAA,IAAH,6IAQtBC,EAAuBD,EAAAA,GAAAA,MAAH,6CAGpBE,EAAuBF,EAAAA,GAAAA,MAAH,uF,qCCK1B,EAVkB,SAAC,GAAuC,IAArCG,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,aAAiBC,ECP9B,SAAkCC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,GAAS,EAAAC,EAAA,GAA6BL,EAAQC,GAElD,GAAIK,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBP,GACpD,IAAKG,EAAI,EAAGA,EAAIK,EAAiBC,OAAQN,IACvCD,EAAMM,EAAiBL,GACnBF,EAASS,QAAQR,IAAQ,GACxBI,OAAOK,UAAUC,qBAAqBC,KAAKb,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CACA,OAAOE,CACT,CDPyD,MACjDU,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACnC,OACE,UAACvB,EAAD,YACE,SAACE,EAAD,CAAsBsB,QAASH,EAA/B,SAAoCjB,KACpC,SAACD,GAAD,QAAsBkB,GAAIA,EAAII,SAAUpB,GAAkBC,MAG/D,C,mEEQD,IAtBgB,SAAC,GAAgC,IAA9BoB,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAC/B,GAA0BC,EAAAA,EAAAA,WAAS,UAAKF,IAAxC,eAAOG,EAAP,KAAcC,EAAd,KAEMzB,GAAe0B,EAAAA,EAAAA,cACnB,YAAiB,IAAdpB,EAAa,EAAbA,OACOqB,EAAgBrB,EAAhBqB,KAAMC,EAAUtB,EAAVsB,MACdH,GAAS,SAAAI,GACP,OAAO,kBAAKA,GAAZ,cAAwBF,EAAOC,GAChC,GACF,GACD,CAACH,IASH,MAAO,CAAED,MAAAA,EAAOC,SAAAA,EAAUzB,aAAAA,EAAc8B,aANnB,SAAAC,GACnBA,EAAEC,iBACFV,GAAS,UAAKE,IACdC,GAAS,UAAKJ,GACf,EAGF,C,sHChBD,EANqB,CACnBM,KAAM,GACNM,MAAO,GACPC,SAAU,I,UCqBZ,EAxBe,CACbP,KAAM,CACJQ,KAAM,OACNR,KAAM,OACNS,UAAU,EACVrC,MAAO,YACPsC,YAAa,mBAEfJ,MAAO,CACLE,KAAM,QACNR,KAAM,QACNS,UAAU,EACVrC,MAAO,aACPsC,YAAa,oBAEfH,SAAU,CACRC,KAAM,WACNR,KAAM,WACNS,UAAU,EACVrC,MAAO,gBACPsC,YAAa,wB,mBClBXC,EAAqB1C,EAAAA,GAAAA,KAAH,gH,oBC8BxB,EAxBqB,SAAC,GAAkB,IAAhB0B,EAAe,EAAfA,SACtB,GAA8CiB,EAAAA,EAAAA,GAAQ,CACpDlB,aAAAA,EACAC,SAAAA,IAFME,EAAR,EAAQA,MAAOxB,EAAf,EAAeA,aAAc8B,EAA7B,EAA6BA,aAKrBH,EAA0BH,EAA1BG,KAAMM,EAAoBT,EAApBS,MAAOC,EAAaV,EAAbU,SAErB,OACE,UAACI,EAAD,CAAoBhB,SAAUQ,EAA9B,WACE,SAACU,EAAA,GAAD,QAAWZ,MAAOD,EAAM3B,aAAcA,GAAkByC,EAAAA,QACxD,SAACD,EAAA,GAAD,QAAWZ,MAAOK,EAAOjC,aAAcA,GAAkByC,EAAAA,SACzD,SAACD,EAAA,GAAD,QACEZ,MAAOM,EACPlC,aAAcA,GACVyC,EAAAA,YAEN,SAACC,EAAA,EAAD,CAAQP,KAAK,SAASQ,QAAQ,YAAYC,KAAK,QAA/C,uBAKL,EC5BKC,EAAkBjD,EAAAA,GAAAA,IAAH,kHAOfkD,EAAclD,EAAAA,GAAAA,GAAH,yLCajB,EAfqB,WACnB,IAAMmD,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAACH,EAAD,YACE,SAACC,EAAD,wBACA,SAAC,EAAD,CAAcxB,SAPG,SAAA2B,GACnBF,GAASG,EAAAA,EAAAA,IAAOD,GACjB,MAQF,C,wDCnBM,IAkBI/B,EAAS,eAAC0B,EAAD,uDAAQ,GAAR,OAClBO,OAAOC,gBAAgB,IAAIC,WAAWT,IAAOU,QAAO,SAACtC,EAAIuC,GAWvD,OAREvC,IAFFuC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["components/TextField/TextField.styled.jsx","components/TextField/TextField.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","hooks/useForm.js","components/RegisterForm/initialState.js","components/RegisterForm/fields.js","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledTextFieldWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 120px 1fr;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 15px;\n`;\n\nconst StyledTextFieldLabel = styled.label`\n  font-weight: 700;\n`;\nconst StyledTextFieldInput = styled.input`\n  padding: 10px;\n  border: 1px solid;\n  border-radius: 4px;\n`;\n\nexport { StyledTextFieldWrapper, StyledTextFieldLabel, StyledTextFieldInput };\n","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  StyledTextFieldWrapper,\n  StyledTextFieldLabel,\n  StyledTextFieldInput,\n} from './TextField.styled';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <StyledTextFieldWrapper>\n      <StyledTextFieldLabel htmlFor={id}>{label}</StyledTextFieldLabel>\n      <StyledTextFieldInput id={id} onChange={handleChange} {...props} />\n    </StyledTextFieldWrapper>\n  );\n};\n\nexport default TextField;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'User name',\n    placeholder: 'Enter your name',\n  },\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'Enter your email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'Enter your password',\n  },\n};\n\nexport default fields;\n","import styled from 'styled-components';\n\nconst StyledRegisterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding: 20px;\n`;\n\nexport { StyledRegisterForm };\n","import useForm from 'hooks/useForm';\nimport initialState from './initialState';\nimport TextField from 'components/TextField/TextField';\nimport fields from './fields';\n\nimport { StyledRegisterForm } from './RegisterForm.styled';\nimport { Button } from '@mui/material';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, email, password } = state;\n\n  return (\n    <StyledRegisterForm onSubmit={handleSubmit}>\n      <TextField value={name} handleChange={handleChange} {...fields.name} />\n      <TextField value={email} handleChange={handleChange} {...fields.email} />\n      <TextField\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <Button type=\"submit\" variant=\"contained\" size=\"small\">\n        Sign up\n      </Button>\n    </StyledRegisterForm>\n  );\n};\n\nexport default RegisterForm;\n","import styled from 'styled-components';\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 70px;\n`;\n\nconst StyledTitle = styled.h1`\n  margin-right: auto;\n  margin-left: auto;\n  color: #131313;\n  letter-spacing: 0.15em;\n  text-shadow: 2px 2px 0px #ffffff, 5px 4px 0px rgba(0, 0, 0, 0.15);\n`;\n\nexport { StyledContainer, StyledTitle };\n","import { useDispatch } from 'react-redux';\n\nimport { signup } from 'redux/auth/auth-operations';\n\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { StyledContainer, StyledTitle } from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    dispatch(signup(data));\n  };\n\n  return (\n    <StyledContainer>\n      <StyledTitle>REGISTER</StyledTitle>\n      <RegisterForm onSubmit={handleSignup} />\n    </StyledContainer>\n  );\n};\n\nexport default RegisterPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["StyledTextFieldWrapper","styled","StyledTextFieldLabel","StyledTextFieldInput","label","handleChange","props","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","id","useMemo","nanoid","htmlFor","onChange","initialState","onSubmit","useState","state","setState","useCallback","name","value","prevState","handleSubmit","e","preventDefault","email","password","type","required","placeholder","StyledRegisterForm","useForm","TextField","fields","Button","variant","size","StyledContainer","StyledTitle","dispatch","useDispatch","data","signup","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}